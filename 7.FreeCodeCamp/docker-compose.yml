version: '3'
services:
  nginx:
    image: nginx:stable-alpine
    container_name: container-nginx
    ports:
      - "3000:80"
    volumes:
      - ./src/nginx/nginx.conf:/etc/nginx/conf.d/default.conf:ro
    environment:
      - NGINX_PORT=80
    networks:
      - network_common
  learn-docker:
    build: .
    container_name: container-sys
    environment:
      # Apply in container docker
      # Same .env of local 
      - PORT=3000
      - MONGO_IP=mongo #Name of image
      - MONGO_PORT=27017
      - MONGO_USER=haison
      - MONGO_PASSWORD=bokute22102000
      - REDIS_URL=redis
      - REDIS_PORT=6379
    # ports: Don't need when using nginx
    #   - 3000-3001:3000
    networks:
      - network_common
    depends_on:
      # Ensure service initialized order
      # Service inside "depends-on" have been initialized first
      # Because "learn-docker" depends on "mongo" so that "mongo" will be initialized before "learn-docker" 
      - mongo
      - redis
  mongo:
    image: mongo
    container_name: container-mongo
    environment:
      - MONGO_INITDB_ROOT_USERNAME=haison
      - MONGO_INITDB_ROOT_PASSWORD=bokute22102000
    volumes:
      - /mongo-db:/data/db
    networks:
      - network_common
  redis:
    image: redis
    container_name: container-redis
    # environment:
    #   - USER=value
    #   - PASSWORD=value
    volumes:
      - /docker/host/dir:/data
    networks:
      - network_common
      
# Volumes not bind mount and amonymous
volumes:
  mongo-db:
networks:
  network_common:
